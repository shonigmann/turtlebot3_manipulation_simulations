import os


def write_model_config(path, name):
    # create file if it doesn't already exist
    os.system('touch ' + path)

    # generate file content:
    contents = [
        '<?xml version="1.0"?>',
        '<!-- THIS FILE WAS AUTOMATICALLY GENERATED BY THE TURTLEBOT3_MANIPULATION_SIMULATION PACKAGE. '
        'MANUAL EDITS ARE DISCOURAGED -->'
        '',
        '<model>',
        '  <name>{}</name>'.format(name),
        '  <version>1.0</version>',
        '  <sdf>model.urdf</sdf>',
        '',
        '  <author>',
        '    <name>Simon Honigmann</name>',
        '    <email>shonigmann@blueorigin.com</email>',
        '  </author>',
        '',
        '  <description>',
        '    {}'.format(name),
        '  </description>',
        '</model>'
    ]

    with open(path, 'w') as f:
        for s in contents:
            f.write(s)
            f.write('\n')

def main():
    cwd = os.getcwd()
    path_folders = cwd.split(os.path.sep)
    if 'src' in path_folders:
        # assume first instance of src directory is the workspace root.
        src_root = os.path.sep
        for f in path_folders:
            src_root = os.path.join(src_root, f)
            if f == 'src':
                break
    else:
        print("Warning: src directory not found. Exiting.")
        return

    target_repos = ['open_manipulator', 'turtlebot3']
    target_packages = ['open_manipulator_x_description', 'turtlebot3_description']
    clone_urls = ['https://github.com/ROBOTIS-GIT/open_manipulator.git', 'https://github.com/ROBOTIS-GIT/turtlebot3']
    target_folders = ['meshes', 'urdf']
    target_urdf = ['open_manipulator_x_robot.urdf.xacro', 'turtlebot3_waffle_pi.urdf']

    for i in range(len(target_repos)):
        os.chdir(src_root)
        if not os.path.exists(os.path.join(src_root, target_repos[i])):
            print('{} not found on path. Cloning...'.format(target_repos[i]))
            os.system('git clone ' + clone_urls[i])

        # create folder for this package, its meshes, and its urdf files
        for j in range(len(target_folders)):
            os.system('mkdir -p ' + os.path.join(cwd, target_packages[i], target_folders[j]))
            # # create symlinks for mesh and urdf files
            # os.chdir(os.path.join(src_root, target_repos[i], target_packages[i], target_folders[j]))
            # files = os.listdir()
            # for f in files:
            #     if not os.path.isdir(f):
            #         os.system('ln -s ' + f + ' ' + os.path.join(cwd, target_packages[i], target_folders[j], f))
            os.system('cp -as ' + os.path.join(src_root, target_repos[i], target_packages[i], target_folders[j]) + ' '
                      + os.path.join(cwd, target_packages[i]))

        os.chdir(cwd)
        # generate urdf from the xacro file of choice
        if 'xacro' in target_urdf[i]:
            os.system('xacro ' + os.path.join(src_root, target_repos[i], target_packages[i], 'urdf', target_urdf[i])
                      + ' > ' + os.path.join(cwd, target_packages[i], 'model.urdf'))
        else:
            os.system('ln -s ' + os.path.join(src_root, target_repos[i], target_packages[i], 'urdf', target_urdf[i])
                      + ' ' + os.path.join(cwd, target_packages[i], 'model.urdf'))

        # create a model.config file to avoid gazebo warnings
        write_model_config(os.path.join(cwd, target_packages[i], 'model.config'), target_packages[i])


if __name__ == '__main__':
    main()
